# Step 1: Build the Go application
# Use the official Golang image as the build environment
FROM golang:1.22-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Go modules manifests
COPY go.mod go.sum ./

# Download the Go modules
RUN go mod download

# Install swag (Swagger) command-line tool
RUN go install github.com/swaggo/swag/cmd/swag@latest

# Install godotenv for loading .env file
RUN go get github.com/joho/godotenv

# Copy the rest of the application's source code
COPY . .

# Generate Swagger documentation
RUN swag init

# Build the Go app
RUN go build -o main .

# Step 2: Create a small image for the application
# Use a minimal base image
FROM alpine:latest

# Set the working directory
WORKDIR /root/

# Copy the binary and .env file from the builder stage
COPY --from=builder /app/main .
# COMMENT OUT FOR PRODUCTION!
COPY --from=builder /app/.env .env
# Copy the Swagger docs generated by swag init
COPY --from=builder /app/docs ./docs

# Expose the port on which the app will run
EXPOSE 8080

# Command to run the binary
CMD ["./main"]
